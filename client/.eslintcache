[{"/home/jo/DEV/social-crud/client/src/index.js":"1","/home/jo/DEV/social-crud/client/src/App.js":"2","/home/jo/DEV/social-crud/client/src/components/Posts/Posts.js":"3","/home/jo/DEV/social-crud/client/src/components/Form/Form.js":"4","/home/jo/DEV/social-crud/client/src/components/Posts/Post/Post.js":"5","/home/jo/DEV/social-crud/client/src/styles.js":"6","/home/jo/DEV/social-crud/client/src/components/Form/styles.js":"7","/home/jo/DEV/social-crud/client/src/components/Posts/Post/styles.js":"8","/home/jo/DEV/social-crud/client/src/components/Posts/styles.js":"9","/home/jo/DEV/social-crud/client/src/reducers/index.js":"10","/home/jo/DEV/social-crud/client/src/reducers/posts.js":"11","/home/jo/DEV/social-crud/client/src/actions/posts.js":"12","/home/jo/DEV/social-crud/client/src/api/index.js":"13"},{"size":473,"mtime":1606922590493,"results":"14","hashOfConfig":"15"},{"size":1650,"mtime":1607046561096,"results":"16","hashOfConfig":"15"},{"size":936,"mtime":1607046181984,"results":"17","hashOfConfig":"15"},{"size":4166,"mtime":1607026070662,"results":"18","hashOfConfig":"15"},{"size":2716,"mtime":1607043404174,"results":"19","hashOfConfig":"15"},{"size":394,"mtime":1606799359047,"results":"20","hashOfConfig":"15"},{"size":425,"mtime":1606799359047,"results":"21","hashOfConfig":"15"},{"size":962,"mtime":1606799359047,"results":"22","hashOfConfig":"15"},{"size":266,"mtime":1606799359047,"results":"23","hashOfConfig":"15"},{"size":110,"mtime":1606799359047,"results":"24","hashOfConfig":"15"},{"size":478,"mtime":1606952432279,"results":"25","hashOfConfig":"15"},{"size":895,"mtime":1606961855324,"results":"26","hashOfConfig":"15"},{"size":272,"mtime":1606952574448,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wyaplw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jo/DEV/social-crud/client/src/index.js",[],["57","58"],"/home/jo/DEV/social-crud/client/src/App.js",["59"],"/home/jo/DEV/social-crud/client/src/components/Posts/Posts.js",[],"/home/jo/DEV/social-crud/client/src/components/Form/Form.js",["60"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const postObjectTemplate = {\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: '',\n    }\n    const [postData, setPostData] = useState(postObjectTemplate)\n    const post = useSelector((state) => currentId ? state.posts.find(post => post._id === currentId) : null);\n    //useSelector(state => console.log(state.posts));\n    console.log(\"post\", post);\n    console.log(\"currentId\", currentId);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    console.log(setCurrentId);\n\n    useEffect(() => {\n        if (post) setPostData(post);\n        console.log(\"postData\", postData);\n    }, [post]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (currentId) {\n            console.log(\"dispatching an update\")\n            dispatch(updatePost(currentId, postData));\n        } else {\n            console.log(\"dispatching a creation\")\n            dispatch(createPost(postData));\n        }\n        clear();\n    }\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData(postObjectTemplate);\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                className={`${classes.root} ${classes.form}`}\n                onSubmit={handleSubmit}\n            >\n                <Typography variant=\"h6\">{currentId ? 'Edit' : 'Create & share'} a memory</Typography>\n                <TextField\n                    name=\"creator\"\n                    variant=\"outlined\"\n                    label=\"Creator\"\n                    value={postData.creator || ''}\n                    fullWidth\n                    onChange={(e) => {\n                        setPostData({ ...postData, creator: e.target.value })\n                    }}\n                />\n                <TextField\n                    name=\"title\"\n                    variant=\"outlined\"\n                    label=\"Title\"\n                    value={postData.title || ''}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n                />\n                <TextField\n                    name=\"message\"\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={postData.message || ''}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n                />\n                <TextField\n                    name=\"tags\"\n                    variant=\"outlined\"\n                    label=\"Tags\"\n                    value={postData.tags || ''}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n                    >\n                    </FileBase>\n                </div>\n                <Button\n                    className={classes.buttonSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    fullWidth\n                >\n                    Submit\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={clear}\n                    fullWidth\n                >\n                    Clear\n                </Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;\n","/home/jo/DEV/social-crud/client/src/components/Posts/Post/Post.js",[],"/home/jo/DEV/social-crud/client/src/styles.js",[],"/home/jo/DEV/social-crud/client/src/components/Form/styles.js",[],"/home/jo/DEV/social-crud/client/src/components/Posts/Post/styles.js",[],"/home/jo/DEV/social-crud/client/src/components/Posts/styles.js",[],"/home/jo/DEV/social-crud/client/src/reducers/index.js",[],"/home/jo/DEV/social-crud/client/src/reducers/posts.js",["61"],"const ACTIONS = {\n    FETCH_ALL: 'FETCH_ALL',\n    CREATE: 'CREATE',\n    UPDATE: 'UPDATE',\n};\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case ACTIONS.FETCH_ALL:\n            return action.payload;\n        case ACTIONS.CREATE:\n            return [...posts, action.payload];\n        case ACTIONS.UPDATE:\n            return posts.map(post => post.id === action.payload._id ? action.payload : post);\n        default:\n            return posts;\n    }\n}","/home/jo/DEV/social-crud/client/src/actions/posts.js",[],"/home/jo/DEV/social-crud/client/src/api/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":29,"nodeType":"68","messageId":"69","endLine":2,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":29,"column":8,"nodeType":"72","endLine":29,"endColumn":14,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":1,"nodeType":"76","endLine":18,"endColumn":2},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postData'. Either include it or remove the dependency array.","ArrayExpression",["79"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [post, postData]",{"range":"82","text":"83"},[1025,1031],"[post, postData]"]